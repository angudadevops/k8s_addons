kind: Namespace
apiVersion: v1
metadata:
  name: elk
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: logging-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  persistentVolumeReclaimPolicy: Recycle
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: es-password-setup
  namespace: elk
  labels:
    app: elasticsearch
data:
  es-password-setup: |
    #!/usr/bin/expect -f

    set timeout -1
    spawn bin/elasticsearch-setup-passwords interactive --batch
    expect "elastic]: "
    send -- "changeme\n"
    expect "elastic]: "
    send -- "changeme\n"
    expect "apm_system]: "
    send -- "changeme\n"
    expect "apm_system]: "
    send -- "changeme\n"
    expect "kibana_system]: "
    send -- "changeme\n"
    expect "kibana_system]: "
    send -- "changeme\n"
    expect "logstash_system]: "
    send -- "changeme\n"
    expect "logstash_system]: "
    send -- "changeme\n"
    expect "beats_system]: "
    send -- "changeme\n"
    expect "beats_system]: "
    send -- "changeme\n"
    expect "remote_monitoring_user]: "
    send -- "changeme\n"
    expect "remote_monitoring_user]: "
    send -- "changeme\n"
    expect eof
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    app: elasticsearch
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
spec:
  selector:
    app: elasticsearch
  ports:
    - port: 9200
      protocol: TCP
      name: db
    - port: 9300
      name: inter-node
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    k8s-app: elasticsearch-logging
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch-logging
  namespace: elk
  labels:
    k8s-app: elasticsearch-logging
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
  labels:
    k8s-app: elasticsearch-logging
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: elk
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch-logging
  apiGroup: ""
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: elk
  labels:
    k8s-app: elasticsearch-logging
    version: v7.4.2
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
        k8s-app: elasticsearch-logging
    spec:
      serviceAccountName: elasticsearch
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "yum install expect -y; ls -lrt; sleep 20; expect es-password-setup"]
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: ["SYS_CHROOT"]
        resources:
            limits:
              cpu: 1000m
              memory: 3Gi
            requests:
              cpu: 100m
              memory: 3Gi
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 5
          timeoutSeconds: 10
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        - name: password
          mountPath: /usr/share/elasticsearch/es-password-setup
          subPath: es-password-setup
        env:
          - name: "NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.name
            value: kubernetes-logging
          - name: discovery.type
            value: single-node
          - name: xpack.security.enabled
            value: "true"
            # - name: ES_JAVA_OPTS
            #   value: "-Xms512m -Xmx512m"
      initContainers:
      - name: increase-vm-max-map
        image: registry.opensuse.org/opensuse/busybox:latest
        imagePullPolicy: Always
        command:
        - /bin/sh
        - -c
        - |
          sysctl -w vm.max_map_count=262144
          chown -R 1000:1000 /usr/share/elasticsearch/
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: elasticsearch-data
        securityContext:
          privileged: true
      volumes:
      - name: password
        configMap:
          name: es-password-setup
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "manual"
      resources:
        requests:
          storage: 1Gi
